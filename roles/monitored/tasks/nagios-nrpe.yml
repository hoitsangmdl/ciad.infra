---

  - name: Check if nagios server is up
    shell: >
      timeout 1 bash -c 'cat < /dev/null > /dev/tcp/nagios/80'
    register: nagios_check_result
    until: nagios_check_result.rc == 0
    retries: 3
    delay: 1
    ignore_errors: yes
    tags: monitored

  - debug: var=nagios_check_result

  - name: set facts
    set_fact: nagios_up="{{ nagios_check_result.rc == 0 }}"
    tags: monitored

  - debug: var=nagios_up

  - name: Check if artifactory:8081 is up
    shell: >
      timeout 1 bash -c 'cat < /dev/null > /dev/tcp/artifactory/8081'
    register: artifactory_check_result
    until: artifactory_check_result.rc == 0
    retries: 3
    delay: 1
    ignore_errors: yes
    tags: monitored

  - name: set artifactory up facts
    set_fact: artifactory_up="{{ artifactory_check_result.rc == 0 }}"
    tags: monitored

  - debug: var=artifactory_up

  - name: Nagios NRPE Install dependencies
    yum:
      name={{ item }}
      state=present
    with_items:
      - nrpe
      - nagios-plugins-all
    when: nagios_up and artifactory_up
    register: nrpe_install_result
    tags: monitored

#  - debug: var=nrpe_install_result
#  - set_fact: nrpe_installed="{{nrpe_install_result.changed}}"

  - name: NRPE add nagios in allowed_hosts
    lineinfile:
      dest="/etc/nagios/nrpe.cfg"
      regexp="^allowed_hosts=127.0.0.1"
      line="allowed_hosts=127.0.0.1,10.0.2.0/24,192.168.100.0/24"
    when: nagios_up
#    when: nagios_up and nrpe_installed
    tags: monitored

  - name: Ensure check all disk command exists
    lineinfile:
      dest="/etc/nagios/nrpe.cfg"
      regexp="^command\[check_all_disks\].*"
      line="command[check_all_disks]=/usr/lib64/nagios/plugins/check_disk -w 20 -c 10"
    when: nagios_up
#    when: nagios_up and nrpe_installed
    tags: monitored

  - set_fact: host_name="{{ansible_hostname}}"
    tags: monitored

  - name: Copy host specific nrpe config file if exist
    delegate_to: nagios
    template:
      src={{ansible_hostname}}.cfg.j2
      dest=/etc/nagios/conf.d/{{ ansible_hostname }}.cfg
#    when: nagios_up and nrpe_installed
    when: nagios_up
    register: host_specific_nrpe
    ignore_errors: yes
    tags: monitored

  - name: Copy nrpe check config to nagios host
    delegate_to: nagios
    template:
      src=nrpe_node.cfg.j2
      dest=/etc/nagios/conf.d/{{ ansible_hostname }}.cfg
    when: nagios_up and not host_specific_nrpe.changed
    tags: monitored

  - name: Copy include_host specific nrpe config file if exist
    delegate_to: nagios
    template:
      src={{ item }}.cfg.j2
      dest=/etc/nagios/conf.d/{{ item }}.cfg
    with_items: include_hosts
    when: nagios_up and include_hosts is defined
    register: include_host_cfg
    ignore_errors: yes
    tags: monitored

  - name: restart start nrpe service
    service:
      name=nrpe
      state=started
      enabled=yes
    when: nagios_up
#    when: nagios_up and nrpe_installed
    tags: monitored

  - name: restart nagios service
    delegate_to: nagios
    service:
      name=nagios
      state=restarted
    when: nagios_up
#    when: nagios_up and nrpe_installed
    tags: monitored
